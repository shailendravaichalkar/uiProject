plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'  // Ensure this line is present
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.smart.best_flutter_ui_templates"  // Ensure this matches the package name in google-services.json
    compileSdkVersion 34
    ndkVersion = flutter.ndkVersion
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "com.smart.best_flutter_ui_templates"  // Ensure this matches the package name in google-services.json
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug  // Use release signing config when appropriate
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:31.1.0')
    implementation 'com.google.firebase:firebase-auth:21.0.5'  // Example Firebase Auth dependency
    implementation 'com.google.firebase:firebase-firestore:24.2.0'  // Example Firebase Firestore dependency
}

flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'  // Apply the google services plugin
